name: Generate Coolify Compose Files

on:
  push:
    branches: [main, develop]
    paths:
      - 'docker-compose*.yml'
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Generate Coolify compose files
        run: |
          mkdir -p .coolify

          # Development環境
          yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' \
            docker-compose.yml docker-compose.development.yml \
            | yq eval 'del(.services.[].container_name) | del(.services.[].ports)' - \
            > .coolify/docker-compose.development.yml

          # Staging環境
          yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' \
            docker-compose.yml docker-compose.staging.yml \
            | yq eval 'del(.services.[].container_name) | del(.services.[].ports)' - \
            > .coolify/docker-compose.staging.yml

          # Production環境
          yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' \
            docker-compose.yml docker-compose.production.yml \
            | yq eval 'del(.services.[].container_name) | del(.services.[].ports)' - \
            > .coolify/docker-compose.production.yml

      - name: Commit generated files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .coolify/
          git diff --staged --quiet || git commit -m "chore: regenerate Coolify compose files [skip ci]"
          git push
