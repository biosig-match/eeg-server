from typing import Any, Iterable

class Series:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def astype(self, *args: Any, **kwargs: Any) -> 'Series': ...
    def str(self, *args: Any, **kwargs: Any) -> Any: ...
    def unique(self) -> list[Any]: ...
    def fillna(self, *args: Any, **kwargs: Any) -> 'Series': ...
    def __iter__(self) -> Iterable[Any]: ...
    def __getattr__(self, name: str) -> Any: ...

class DataFrame:
    empty: bool
    columns: list[Any]
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def to_csv(self, *args: Any, **kwargs: Any) -> None: ...
    def copy(self, *args: Any, **kwargs: Any) -> 'DataFrame': ...
    def sort_values(self, *args: Any, **kwargs: Any) -> 'DataFrame': ...
    def reset_index(self, *args: Any, **kwargs: Any) -> 'DataFrame': ...
    def isin(self, *args: Any, **kwargs: Any) -> 'DataFrame': ...
    def iterrows(self) -> Iterable[tuple[int, Any]]: ...
    def to_dict(self, *args: Any, **kwargs: Any) -> dict[str, Any]: ...
    def __getitem__(self, key: Any) -> Any: ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __getattr__(self, name: str) -> Any: ...
    def __len__(self) -> int: ...

def read_csv(*args: Any, **kwargs: Any) -> DataFrame: ...
def __getattr__(name: str) -> Any: ...
